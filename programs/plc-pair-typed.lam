-- Church encoding of pairs

lang.pcf
lang.poly
lang.typed

pair = (/\ a1 -> /\ a2 -> (\ x -> \ y -> (/\ b -> \ z -> z x y) : (forall b . (a1 -> a2 -> b) -> b)) : a1 -> a2 -> (forall b . (a1 -> a2 -> b) -> b))
        : forall a1 . forall a2 . a1 -> a2 -> (forall b . (a1 -> a2 -> b) -> b)

first = (/\ a1 -> /\ a2 -> (\ p -> p @a1 ((\ x -> \ y -> x) : a1 -> a2 -> a1)))
          : forall a1 . forall a2 . (forall b . (a1 -> a2 -> b) -> b) -> a1

second = (/\ a1 -> /\ a2 -> (\ p -> p @a2 ((\ x -> \ y -> y) : a1 -> a2 -> a2)))
          : forall a1 . forall a2 . (forall b . (a1 -> a2 -> b) -> b) -> a2

second' = second @Nat @Nat : (forall b . (Nat -> Nat -> b) -> b) -> Nat
first'  = first @Nat @Nat  : (forall b . (Nat -> Nat -> b) -> b) -> Nat
pair'   = pair @Nat @Nat   : Nat -> Nat -> (forall b . (Nat -> Nat -> b) -> b)

-- e.g. gives 1
second' (pair' zero (succ zero))
